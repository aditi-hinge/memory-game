{"ast":null,"code":"import _objectSpread from\"/home/aditi/Downloads/TheOdinProject/memory-game/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/home/aditi/Downloads/TheOdinProject/memory-game/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/home/aditi/Downloads/TheOdinProject/memory-game/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import Header from\"./Header\";import Footer from\"./Footer\";import Card from\"./Card\";import luffy from\"../images/luffy.jpg\";import zoro from\"../images/zoro.jpg\";import sanji from\"../images/sanji.jpg\";import chopper from\"../images/chopper.jpg\";import nami from\"../images/nami.jpg\";import robin from\"../images/robin.jpg\";import usopp from\"../images/usopp.jpg\";import brook from\"../images/brook.jpg\";import jinbei from\"../images/jinbei.jpg\";import franky from\"../images/franky.jpg\";import vivi from\"../images/vivi.jpg\";import sabo from\"../images/sabo.jpg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Game(){//make character array\nvar characters=[{name:\"Luffy\",image:luffy,id:0,isSelected:false},{name:\"Zoro\",image:zoro,id:1,isSelected:false},{name:\"Sanji\",image:sanji,id:2,isSelected:false},{name:\"Chopper\",image:chopper,id:3,isSelected:false},{name:\"Nami\",image:nami,id:4,isSelected:false},{name:\"Robin\",image:robin,id:5,isSelected:false},{name:\"Usopp\",image:usopp,id:6,isSelected:false},{name:\"Brook\",image:brook,id:7,isSelected:false},{name:\"Jinbei\",image:jinbei,id:8,isSelected:false},{name:\"Franky\",image:franky,id:9,isSelected:false},{name:\"Vivi\",image:vivi,id:10,isSelected:false},{name:\"Sabo\",image:sabo,id:11,isSelected:false}];// states\nvar _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),currentScore=_React$useState2[0],setCurrentScore=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),highScore=_React$useState4[0],setHighScore=_React$useState4[1];var _React$useState5=React.useState([]),_React$useState6=_slicedToArray(_React$useState5,2),comparisonArray=_React$useState6[0],setComparisonArray=_React$useState6[1];console.log(currentScore);var _React$useState7=React.useState(characters),_React$useState8=_slicedToArray(_React$useState7,2),cards=_React$useState8[0],setCards=_React$useState8[1];//function to add cards to comparison array\n// if the same card is clicked twice: comparison array get empty\n// current score and high score updated\n// game is reset and player alerted.\n// else the card gets added to comparison array and\n// score is updated by 1\nfunction addCardToComparisonArray(name){if(comparisonArray.includes(name)){setComparisonArray([]);setCurrentScore(0);gameLostAlert();}else{setComparisonArray([].concat(_toConsumableArray(comparisonArray),[name]));setCurrentScore(function(prevScore){return prevScore+1;});}}// function to give an alert message if the game is lost\nfunction gameLostAlert(){alert(\"you lost! please try again!\");}// function to change state of isSelected of the\n// cards that have been clicked once\nfunction changeIsSelected(id){setCards(function(prevCards){return prevCards.map(function(card){return card.id===id?_objectSpread(_objectSpread({},card),{},{isSelected:true}):card;});});}// randomize array function\n// to display cards at random on the screen\nfunction randomizeArray(array){for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}return array;}//Updating current score and high score in real time\n// display win message\nReact.useEffect(function(){//do something\nif(highScore<currentScore){setHighScore(currentScore);}if(currentScore===12){alert(\"congratulations! You WON!!\");setComparisonArray([]);setCurrentScore(0);}},[currentScore,highScore]);var cardElement=randomizeArray(cards).map(function(card){return/*#__PURE__*/_jsx(Card,{source:card.image,name:card.name,isSelected:card.isSelected,clickHandle:function clickHandle(){changeIsSelected(card.id);addCardToComparisonArray(card.name);}},card.id);});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{currentScore:currentScore,highScore:highScore}),/*#__PURE__*/_jsx(\"div\",{className:\"cards-container\",children:cardElement}),/*#__PURE__*/_jsx(Footer,{})]});}","map":{"version":3,"names":["React","Header","Footer","Card","luffy","zoro","sanji","chopper","nami","robin","usopp","brook","jinbei","franky","vivi","sabo","Game","characters","name","image","id","isSelected","useState","currentScore","setCurrentScore","highScore","setHighScore","comparisonArray","setComparisonArray","console","log","cards","setCards","addCardToComparisonArray","includes","gameLostAlert","prevScore","alert","changeIsSelected","prevCards","map","card","randomizeArray","array","i","length","j","Math","floor","random","temp","useEffect","cardElement"],"sources":["/home/aditi/Downloads/TheOdinProject/memory-game/src/components/Game.js"],"sourcesContent":["import React from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Card from \"./Card\";\nimport luffy from \"../images/luffy.jpg\";\nimport zoro from \"../images/zoro.jpg\";\nimport sanji from \"../images/sanji.jpg\";\nimport chopper from \"../images/chopper.jpg\";\nimport nami from \"../images/nami.jpg\";\nimport robin from \"../images/robin.jpg\";\nimport usopp from \"../images/usopp.jpg\";\nimport brook from \"../images/brook.jpg\";\nimport jinbei from \"../images/jinbei.jpg\";\nimport franky from \"../images/franky.jpg\";\nimport vivi from \"../images/vivi.jpg\";\nimport sabo from \"../images/sabo.jpg\";\n\nexport default function Game() {\n  //make character array\n  const characters = [\n    { name: \"Luffy\", image: luffy, id: 0, isSelected: false },\n    { name: \"Zoro\", image: zoro, id: 1, isSelected: false },\n    { name: \"Sanji\", image: sanji, id: 2, isSelected: false },\n    { name: \"Chopper\", image: chopper, id: 3, isSelected: false },\n    { name: \"Nami\", image: nami, id: 4, isSelected: false },\n    { name: \"Robin\", image: robin, id: 5, isSelected: false },\n    { name: \"Usopp\", image: usopp, id: 6, isSelected: false },\n    { name: \"Brook\", image: brook, id: 7, isSelected: false },\n    { name: \"Jinbei\", image: jinbei, id: 8, isSelected: false },\n    { name: \"Franky\", image: franky, id: 9, isSelected: false },\n    { name: \"Vivi\", image: vivi, id: 10, isSelected: false },\n    { name: \"Sabo\", image: sabo, id: 11, isSelected: false }\n  ];\n\n  // states\n  const [currentScore, setCurrentScore] = React.useState(0);\n  const [highScore, setHighScore] = React.useState(0);\n  const [comparisonArray, setComparisonArray] = React.useState([]);\n  console.log(currentScore);\n  const [cards, setCards] = React.useState(characters);\n\n  //function to add cards to comparison array\n  // if the same card is clicked twice: comparison array get empty\n  // current score and high score updated\n  // game is reset and player alerted.\n  // else the card gets added to comparison array and\n  // score is updated by 1\n  function addCardToComparisonArray(name) {\n    if (comparisonArray.includes(name)) {\n      setComparisonArray([]);\n      setCurrentScore(0);\n      gameLostAlert();\n    } else {\n      setComparisonArray([...comparisonArray, name]);\n      setCurrentScore((prevScore) => prevScore + 1);\n    }\n  }\n\n  // function to give an alert message if the game is lost\n  function gameLostAlert() {\n    alert(\"you lost! please try again!\");\n  }\n\n  // function to change state of isSelected of the\n  // cards that have been clicked once\n  function changeIsSelected(id) {\n    setCards((prevCards) =>\n      prevCards.map((card) => {\n        return card.id === id ? { ...card, isSelected: true } : card;\n      })\n    );\n  }\n\n  // randomize array function\n  // to display cards at random on the screen\n  function randomizeArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = array[i];\n      array[i] = array[j];\n      array[j] = temp;\n    }\n    return array;\n  }\n\n  //Updating current score and high score in real time\n  // display win message\n  React.useEffect(() => {\n    //do something\n    if (highScore < currentScore) {\n      setHighScore(currentScore);\n    }\n    if (currentScore === 12) {\n      alert(\"congratulations! You WON!!\");\n      setComparisonArray([]);\n      setCurrentScore(0);\n    }\n  }, [currentScore, highScore]);\n\n  const cardElement = randomizeArray(cards).map((card) => {\n    return (\n      <Card\n        source={card.image}\n        name={card.name}\n        key={card.id}\n        isSelected={card.isSelected}\n        clickHandle={() => {\n          changeIsSelected(card.id);\n          addCardToComparisonArray(card.name);\n        }}\n      />\n    );\n  });\n\n  return (\n    <div>\n      <Header currentScore={currentScore} highScore={highScore} />\n      <div className=\"cards-container\">{cardElement}</div>\n      <Footer />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}